package com.storedobject.ui;

import com.storedobject.vaadin.CloseableView;
import com.storedobject.vaadin.View;

public class Test extends View implements CloseableView {

    private final RedirectSAML redirectSAML = new RedirectSAML();

    public Test() {
        super("SAML Test");
        redirectSAML.setRelayState("teststate");
        redirectSAML.setSAMLResponse("");
        redirectSAML.setSite("https://ipmwlc.saxobank.com/sim/login.sso.ashx");
        setComponent(redirectSAML);
    }

    @Override
    protected void execute(View parent, boolean doNotLock) {
        super.execute(parent, doNotLock);
        redirectSAML.go();
    }
}
